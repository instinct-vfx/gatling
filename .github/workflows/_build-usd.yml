name: Build gatling for USD

on:
  workflow_call:
    outputs:
      archive-name:
        description: "Name of the archive containing the build artifacts"
        value: build-${{ inputs.build-config }}-${{ github.sha }}
    inputs:
      build-config:
        description: "Name of the CMake build configuration"
        required: false
        type: string
        default: "Release"
      usd-version:
        description: "Name of the USD release, in the form 'XX.XX'"
        required: true
        type: string
      mdl-sdk-cache-key-prefix:
        description: "Prefix of the MDL SDK cache key"
        required: false
        type: string
        default: "MDL-SDK"
      upload-archives:
        description: "Whether build results should be uploaded or not"
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build USD v${{ inputs.usd-version }} for ${{ matrix.name }} (${{ inputs.build-config }})

    strategy:
      matrix:
        include:
        - name: Ubuntu / clang
          image: ubuntu-20.04
          usd-download-url: "https://github.com/pablode/USD/releases/download/v${{ inputs.usd-version }}-ci-release/USD${{ inputs.usd-version }}_Linux_x64.tar.gz"
          usd-install-path: "/home/runner/work/USD/USD/INSTALL"
          upload-archive: false
          cmake-params: -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++

    uses: ./.github/workflows/_build.yml
    with:
      image: ${{ matrix.image }}
      build-config: ${{ inputs.build-config }}
      usd-download-url: ${{ matrix.usd-download-url }}
      usd-install-path: ${{ matrix.usd-install-path }}
      upload-archive: ${{ matrix.upload-archive }}
      archive-name: build-${{ inputs.build-config }}-${{ github.sha }}
      archive-file-name: ${{ matrix.archive-file-name }}
      mdl-sdk-cache-key: ${{ inputs.mdl-sdk-cache-key-prefix }}_${{ matrix.image }}
      cmake-params: ${{ matrix.cmake-params }}
